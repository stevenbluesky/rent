package com.rent.dao;

import java.util.List;

import com.rent.common.persistence.annotation.MyBatisDao;
import com.rent.condition.HouseCondition;
import com.rent.condition.HouseFileContion;
import com.rent.condition.HouseRmdevCondition;
import com.rent.door.HouseInfo;
import com.rent.entity.PrHouse;

@MyBatisDao
public interface PrHouseMapper {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PR_HOUSE
     *
     * @mbggenerated Thu May 04 11:37:29 CST 2017
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PR_HOUSE
     *
     * @mbggenerated Thu May 04 11:37:29 CST 2017
     */
    int insert(PrHouse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PR_HOUSE
     *
     * @mbggenerated Thu May 04 11:37:29 CST 2017
     */
    int insertSelective(PrHouse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PR_HOUSE
     *
     * @mbggenerated Thu May 04 11:37:29 CST 2017
     */
    PrHouse selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PR_HOUSE
     *
     * @mbggenerated Thu May 04 11:37:29 CST 2017
     */
    int updateByPrimaryKeySelective(PrHouse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PR_HOUSE
     *
     * @mbggenerated Thu May 04 11:37:29 CST 2017
     */
    int updateByPrimaryKey(PrHouse record);
    
    Integer  getCountByEstate(int estateId);
    
    List<PrHouse> findByEstatePaged(int estateId,int begin,int end);
    List<PrHouse> findByConditionPaged(HouseFileContion condition);
    /**
     * ���ݱ�Ų�ѯ����
     * @param no
     * @return
     */
    PrHouse findByNo(String no);

    PrHouse findByLock(String associatedlock);
    //条件查询
    List<PrHouse> findByCondition(HouseCondition condition);
    List<PrHouse> findByFileCondition(HouseFileContion condition);
    
    //获取房子当前状态
    Integer getStateById(int houseId);
    List<PrHouse> findByHouseRmdevCondition(HouseRmdevCondition condition);
    
    /**
     * 房源管理页面
     * @param condition
     * @return
     */
    List<PrHouse> findHouseByConditionPaged(HouseCondition condition);
    
    Integer getHouseCountByConditionPaged(HouseCondition condition);
    
    Integer getCountByEach(HouseCondition condition);
    //获取当前id
    Integer getCurrId();
    
    List<PrHouse> findByFileConditionAndPaged(HouseFileContion condition);

	List<PrHouse> findPlanHouse();

	Integer findCountByFileCondition(HouseFileContion condition);

	List<PrHouse> findByFileCondition2(HouseFileContion condition);

	List<PrHouse> findByFileConditionAndPaged2(HouseFileContion condition);
	
	
	List<PrHouse> findByBuildingNo(String buildingNoId);

    List<String> findAllLock();

    HouseInfo findRoomInfoById(Integer houseid);
}